
@model IEnumerable<ViewModels.Models.LoanModel>

@{
    int srno = 0;
}
<br />


<div class="row" style="padding-top:80px;padding-left:200px">
    @if (User.Claims.ToList() != null && User.Claims.ToList().Count() > 0 && User.Claims.ToList()[1].Value == "admin" && User.Claims.LastOrDefault().Value != null)
    {
        <div class="form-group">
            <div class="col-md-10">
                <input type="file" id="fileupload" name="files" class="form-control" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="button" name="Upload" value="Upload" id="btnupload" class="btn btn-primary" />
            </div>
        </div>
        <div class="col-md-5">
            <input type="submit" name="Export" value="Save Data" id="btnExport" class="btn btn-primary" disabled />
        </div>
    }
</div>
<div class="clearfix">&nbsp;</div>
<div class="row">
    <div id="divPrint" class="container"></div>

</div>

<br />
<div class="container p-4 border">
    <div class="row pb-2">
        <div class="col">
            <h1 class="text-primary">Loan Account List</h1>
            <h2>
                @if (User.Claims.ToList()[1].Value == "customer" && Model.Count() > 0)
                {

                    @((Model.LastOrDefault().AccountHolder_Name))

                }
            </h2>
        </div>
    </div>

    <table class="table table-striped dt-responsive wrap" width="100%" cellspacing="0">
        <thead>

            <tr>
                <th>
                    Sr.No
                </th>

                <th>
                    Account No
                </th>
                <th>
                    Loan Type
                </th>
                <th>
                    Balance
                </th>

            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {
                @for (int i = 0; i < Model.Count(); i++)
                {

                    <tr>
                        <td>@Convert.ToInt32(i + 1)</td>
                        <td>@Model.ToList()[i].AccountNo</td>
                        <td>@Model.ToList()[i].GL_NAME</td>
                        <td>@((Model.ToList()[i].Balance).ToString())</td>
                        @*<td>
                                <a asp-controller="Villa" asp-action="UpdateVilla" asp-route-villaId="@item.Customer_ID" class="btn btn-success"><i class="bi bi-pencil-square"></i></a>
                                <a asp-controller="Villa" asp-action="DeleteVilla" asp-route-villaId="@item.Customer_ID" class="btn btn-danger"><i class="bi bi-trash-fill"></i></a>
                            </td>*@
                    </tr>
                }
            }
        </tbody>

        @if (User.Claims.ToList()[1].Value == "customer" && Model.Count() > 0)
        {
            <tr>
                <td></td>
                <td></td>
                <td>Total</td>
                <td> @Convert.ToDouble(Model.LastOrDefault().SumOfCustomerBal).ToString()</td>
            </tr>
        }

    </table>
    <div>
        <p class="float-right font-weight-bold"> Last Updated As On:- @ViewData["lastupdatedon"]</p>
    </div>

</div>

<script type="text/javascript" src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
    var Exceldata;
    $(function () {
        $('#btnupload').on('click', function () {
            var fileExtension = ['xls', 'xlsx'];
            var filename = $('#fileupload').val();
            if (filename.length == 0) {
                alert("Please select a file.");
                return false;
            }
            else {
                var extension = filename.replace(/^.*\./, '');
                if ($.inArray(extension, fileExtension) == -1) {
                    alert("Please select only excel files.");
                    return false;
                }
            }
            var fdata = new FormData();
            var fileUpload = $("#fileupload").get(0);
            var files = fileUpload.files;
            fdata.append(files[0].name, files[0]);
            $.ajax({
                type: "POST",
                url: "/Loan/Import",
                beforeSend: function (xhr) {
                    $('#cover-spin').show(0);
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: fdata,
                contentType: false,
                processData: false,
                success: function (response) {
                    $('#cover-spin').hide();
                    if (response.statusCode != 200)
                        alert('Some error occured while uploading');
                    else if (response.statusCode == 200) {
                        $('#btnExport').removeAttr('disabled');
                        Exceldata = response.result;
                        $('#divPrint').html(response.errorMessages[0]);
                    }
                    else {
                        $('#btnExport').removeAttr('disabled');
                        $('#divPrint').html(response.errorMessages[0]);
                    }
                },
                error: function (e) {
                    $('#divPrint').html(e.responseText);
                }
            });
        })
        $('#btnExport').on('click', function () {
            var fileExtension = ['xls', 'xlsx'];
            var filename = $('#fileupload').val();

            var fdata = new FormData();


            if (filename.length == 0) {
                alert("Please select a file then Import");
                return false;
            }
            else if (Exceldata != null && Exceldata != undefined) {
                fdata.append("listOfAccounts", JSON.stringify(Exceldata));
                $('#cover-spin').show(0);
                $.ajax({
                    type: "POST",
                    async: true,
                    url: "/Loan/Create",
                    cache: false,
                    contentType: false,
                    processData: false,
                    data: fdata,
                    success: function (response) {
                        $('#cover-spin').hide();
                        if (response.statusCode != 200)
                            alert('Some error occured while uploading');
                        else if (response.statusCode == 200) {
                            alert("data save sucessfully");
                            window.location.reload();
                        }
                        else {
                            $('#btnExport').removeAttr('disabled');
                            $('#divPrint').html(response.errorMessages[0]);
                        }
                    },
                    error: function (e) {
                        $('#cover-spin').hide();
                        $('#divPrint').html(e.responseText);
                    }
                });
            }
        });
    });

</script>
